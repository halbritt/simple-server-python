$schema: http://json-schema.org/schema
$schema-version: 1.0.0
$plugin-type: acquisition
properties: 
  version:
    type: string
  host:
    description: The IP address of the server you are collecting data from
    type: string
    pattern: ^(?=.{1,255}$)[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?(?:\.[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?)*\.?$
  port: 
    description: The port of the server you are collection data from
    type: integer
    minimum: 0
    maximum: 65535
  username: 
    type: string
  password: 
    type: string
  hostName:
    type: string
  sharedFolder:
    type: string
  folderPath:
    type: string
    default: '/'
  debug:
    type: boolean
    default: false
  polltime: 
    description: Poll time in seconds
    type: number
    minimum: 0
    default: 10
  timeout: 
    description: Timeout in seconds
    type: number
    minimum: 0
    default: 10
  outputdirectory:
    type: string
    pattern: ^([A-Za-z0-9_/])+$
    default: "databuffer/default"
  removeFiles:
    type: boolean
    default: true
  skipFiles:
    description: dont copy these files over
    type: array
    items:
      type: string
    default: []
  binaryDelimiter:
    type: array
    default: ["_"]
  filenamemetadata: 
    type: array
    items:
      type: object
      properties:
        name:
          type: string
        address:
          type: integer
      required:
        - name
        - address
  ts_from_filename:
    type: string
    description: regex for parsing timestamp.  Needs to have named groups with keys year, month, day, hour, min, sec
  timezone:
    type: string
    description: timezone of timestamp specified in filename (only used if ts_from_filename is true)
  counterfield:
    type: object
    properties:
      field:
        anyOf: 
          - type: string
          - type: object
    required:
      - field
    default: {}
  runningfield:
    type: object
    properties:
      field:
        anyOf: 
          - type: string
          - type: object
    required:
      - field
    default: {}
  xml:
    type: object
    properties:
      fields:
        type: object
    required:
      - fields
    default: {fields: {}}
  csv:
    type: array
    items:
      type: object
      additionalProperties: false
      properties:
        match:
          type: string
          description: "Filename patterns to match"
        sep:
          type: string
          description: "Delimiter for csv files"
        skip:
          type: integer
          description: "Number of rows to skip in the csv file"
        column_names:
          description: "Column names for headerless formats, ex. alarm."
          type: array
          items:
            type: string
        field_prefix:
          type: string
          description: "String to prepend to field names, ex. Cement_"
          default: ""
        format:
          enum:
          - "alarm"
          - "columnar"
          - "key_value"
          - "value_key"
          - "ipc_version"
          - "ucb_version"
        sslog_type:
          type: string
          description: "sslog_type to set in the resulting sslog."
          default: "csv"
      required:
      - match
      - format
    default: []
  route_files:
    type: array
    description: "Duplicates binary files to one or more data sources.
    For example, given the following configuration:

    route_files:
    - source: A
      patterns: ['*.jpg', '*.BMP']
    - source: B
      patterns: ['*.jpg']

    JPG files will be associated with both machines A and B, while BMP files
    will be associated with only machine A.

    "
    default: []
    items:
      type: object
      additionalProperties: false
      properties:
        source:
          description: "Data source to route matching files to."
          type: string
        patterns:
          description: "List of unix-style patterns, ex. ['*.txt']."
          type: array
          minLength: 1
          items:
            type: string
        strip_regexp:
          description: "Regular expression to strip for all fields routed to
          this source. Intended to help transition prefixed CSV fields to lines.

          For example, `strip_regexp: '^CV_L[-_]'` will strip either CV-L_ or
          CV-L- from the beginning of all field names.
          "
          type: string
          default: null
      required:
      - source
      - patterns
required:
- version
- host
- port
- username
- password
- hostName
- sharedFolder
- folderPath
- filenamemetadata
- counterfield
- runningfield
